from tokenize import group
from typing import Dict, Any
import random
import vk_api
from vk_api.bot_longpoll import VkBotEventType, VkBotLongPoll
from config import token, group_id
from controllers.diceController import calculate_roll
from controllers.messageController import (
    burn_command,
    devour_command,  # NEW
    choose_option,
    get_random_joke,
    hug_command,
    kiss_command,
    bonk_command,
    slap_command,
    send_message,
    get_user_name,
    help_message,
)
from controllers.duelController import DuelController
from controllers.bingoController import BingoController
from controllers.characterController import CharacterController
from controllers.marriageController import MarriageController
from controllers.profileController import ProfileController
from controllers.rouletteController import RouletteController
from controllers.adminController import AdminController
from controllers.lotteryController import LotteryController

# --- VK init ---
vk_session = vk_api.VkApi(token=token)
longpoll = VkBotLongPoll(vk_session, group_id=group_id, wait=60)
vk = vk_session.get_api()

marriage_controller = MarriageController()
profile_controller = ProfileController()
roulette_controller = RouletteController()
bingoController = BingoController()
characterController = CharacterController()
adminController = AdminController()
lotteryController = LotteryController()

# ---------------- Main loop -----------------
for event in longpoll.listen():
    if event.type != VkBotEventType.MESSAGE_NEW:
        continue

    # -------- –ü–∞—Ä—Å–∏–Ω–≥ –≤—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è --------
    message = event.obj.message
    original_text = message["text"].strip()
    text = original_text.lower()

    peer_id = message["peer_id"]
    user_id = message["from_id"]

    user_name = get_user_name(user_id)

    # --- –í—ã–±–æ—Ä "–∏–ª–∏" ---
    if " –∏–ª–∏ " in text:
        response = choose_option(text)
        if response:
            send_message(peer_id, response)
            continue

    # ===== –ö—É–±—ã =====
    if "–º–∞—Ä—Ç–∞" in text:
        roll_command = text.split("–º–∞—Ä—Ç–∞", 1)[1].strip()
        send_message(peer_id, calculate_roll(user_name, roll_command))
        continue
    elif "/" in text:
        roll_command = text.split("/", 1)[1].strip()
        send_message(peer_id, calculate_roll(user_name, roll_command))
        continue

    # ===== –û–±—â–∏–µ —Ñ—Ä–∞–∑—ã =====
    if text == "–ø—Ä–∏–≤–µ—Ç":
        send_message(peer_id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")
        continue
    if text == "–ø–æ–∫–∞":
        send_message(peer_id, f"–£–¥–∞—á–∏ –≤–∞–º, {user_name}!")
        continue
    if text == "–ø–æ–º–æ—â—å":
        send_message(peer_id, help_message)
        continue
    if text == "–∞–Ω–µ–∫–¥–æ—Ç":
        send_message(peer_id, get_random_joke())
        continue

    # ===== –î—É—ç–ª–∏ =====
    if text == "–¥—É—ç–ª—å":
        if message.get('reply_message'):
            response = DuelController.handle_duel_command(user_id, message['reply_message'])
        else:
            response = DuelController.handle_duel_command(user_id)
        send_message(peer_id, response)
        continue

    if text == "–ø—Ä–∏–Ω—è—Ç—å –¥—É—ç–ª—å":
        send_message(peer_id, DuelController.handle_accept_duel(user_id))
        continue

    if text == "–≤—ã—Å—Ç—Ä–µ–ª":
        send_message(peer_id, DuelController.handle_shoot_command(peer_id, user_id))
        continue

    if text == "–¥—É—ç–ª—å —Å—Ç–∞—Ç–∞":
        stats = DuelController.get_stats(peer_id)
        if not stats:
            send_message(peer_id, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥—É—ç–ª–µ–π –ø–æ–∫–∞ –ø—É—Å—Ç–∞.')
        else:
            response = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–±–µ–¥ –≤ –¥—É—ç–ª—è—Ö:\n'
            for uid, user_stats in stats.items():
                uname = get_user_name(uid)
                wins = user_stats["wins"]
                streak = user_stats["streak"]
                rank = DuelController.get_rank(wins)
                streak_info = f" | –°–µ—Ä–∏—è: {streak}üî•" if streak >= 1 else ""
                response += f'{uname}: {wins} ({rank}){streak_info}\n'
            send_message(peer_id, response)
        continue

    # ===== –ë—Ä–∞–∫ =====
    if text == "–±—Ä–∞–∫":
        if message.get('reply_message'):
            response = marriage_controller.propose_marriage(user_id, peer_id, message['reply_message'])
        else:
            response = marriage_controller.propose_marriage(user_id, peer_id)
        send_message(peer_id, response)
        continue

    if text == "–ø—Ä–∏–Ω—è—Ç—å –±—Ä–∞–∫":
        send_message(peer_id, marriage_controller.accept_marriage(user_id))
        continue

    if text == "—Ä–∞–∑–≤–æ–¥":
        send_message(peer_id, marriage_controller.divorce(user_id, peer_id))
        continue

    if text == "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–∞–∑–≤–æ–¥":
        send_message(peer_id, marriage_controller.confirm_divorce(user_id))
        continue

    if text == "–±—Ä–∞–∫–∏":
        marriages = marriage_controller.get_marriages(peer_id)
        if not marriages:
            response = '–í –Ω–∞—à–µ–π –≥–∏–ª—å–¥–∏–∏ –ø–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –≤ –±—Ä–∞–∫–µ!'
        else:
            response = '–°–ø–∏—Å–æ–∫ –±—Ä–∞–∫–æ–≤:\n'
            for pair, data in marriages.items():
                id1, id2 = eval(pair)
                response += f"{get_user_name(id1)} + {get_user_name(id2)} (—Å {data['date']})\n"
        send_message(peer_id, response)
        continue

    # ===== –ü—Ä–æ—Ñ–∏–ª—å =====
    if text.startswith("–º–Ω–µ –Ω–∏–∫"):
        nickname = original_text[len("–º–Ω–µ –Ω–∏–∫"):].strip()
        if nickname:
            profile_controller.set_nickname(user_id, nickname)
            send_message(peer_id, f"–í–∞—à –Ω–∏–∫–Ω–µ–π–º –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ '{nickname}'.")
        else:
            send_message(peer_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã '–º–Ω–µ –Ω–∏–∫'.")
        continue

    # ===== –≠–º–æ—Ü–∏–∏ =====
    if text.startswith("–æ–±–Ω—è—Ç—å"):
        reply_msg = event.message.get('reply_message')
        send_message(peer_id, hug_command(user_id, reply_msg))
        continue

    if text == "–ø–æ–≥–ª–∞–¥–∏—Ç—å":
        if message.get('reply_message'):
            target_id = message['reply_message']['from_id']
            target_name = get_user_name(target_id)
            user_name = get_user_name(user_id)
            
            if target_id == user_id:
                response = f"üòÖ {user_name}, –Ω–µ–ª—å–∑—è –≥–ª–∞–¥–∏—Ç—å —Å–µ–±—è!"
            else:
                responses = [
                    f"üòä {user_name} –Ω–µ–∂–Ω–æ –ø–æ–≥–ª–∞–¥–∏–ª(–∞) {target_name} –ø–æ –≥–æ–ª–æ–≤–µ",
                    f"ü•∞ {user_name} –ª–∞—Å–∫–æ–≤–æ –ø–æ–≥–ª–∞–¥–∏–ª(–∞) {target_name}",
                    f"üòå {user_name} —É—Å–ø–æ–∫–∞–∏–≤–∞—é—â–µ –ø–æ–≥–ª–∞–¥–∏–ª(–∞) {target_name}",
                    f"üíï {user_name} —Å –ª—é–±–æ–≤—å—é –ø–æ–≥–ª–∞–¥–∏–ª(–∞) {target_name}",
                    f"üòá {user_name} –∑–∞–±–æ—Ç–ª–∏–≤–æ –ø–æ–≥–ª–∞–¥–∏–ª(–∞) {target_name}"
                ]
                response = random.choice(responses)
        else:
            response = "‚ùå –ß—Ç–æ–±—ã –ø–æ–≥–ª–∞–¥–∏—Ç—å, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"
        send_message(peer_id, response)
        continue

    if text.startswith("–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å"):
        reply_msg = event.message.get('reply_message')
        send_message(peer_id, kiss_command(user_id, reply_msg))
        continue

    if text.startswith("—Å–∂–µ—á—å"):
        reply_msg = event.message.get('reply_message')
        resp, img_path = burn_command(user_id, reply_msg)
        send_message(peer_id, resp, image_path=img_path)  # FIX: keyword arg
        continue

    if text.startswith("—Å–æ–∂—Ä–∞—Ç—å"):
        reply_msg = event.message.get('reply_message')
        resp, doc_path = devour_command(user_id, reply_msg)
        send_message(peer_id, resp, doc_path=doc_path)
        continue

    if text.startswith("—à–ª—ë–ø–Ω—É—Ç—å") or text.startswith("—à–ª–µ–ø–Ω—É—Ç—å"):
        reply_msg = event.message.get('reply_message')
        send_message(peer_id, slap_command(user_id, reply_msg))
        continue

    if text.startswith("–±–æ–Ω—å–∫"):
        reply_msg = event.message.get('reply_message')
        send_message(peer_id, bonk_command(user_id, reply_msg))
        continue

    # ===== –†—É–ª–µ—Ç–∫–∞ =====
    if text == "—Ä—É–ª–µ—Ç–∫–∞":
        send_message(peer_id, roulette_controller.start_game(peer_id, user_id))
        continue

    if text == "—Ä—É–ª–µ—Ç–∫–∞ –≤—Å—Ç—É–ø–∏—Ç—å":
        send_message(peer_id, roulette_controller.join_game(peer_id, user_id))
        continue

    if text == "—Ä—É–ª–µ—Ç–∫–∞ –Ω–∞—á–∞—Ç—å":
        send_message(peer_id, roulette_controller.start_roulette(peer_id))
        continue

    if text == "—â–µ–ª—á–æ–∫":
        send_message(peer_id, roulette_controller.shoot(peer_id, user_id))
        continue

    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–≥—Ä—ã –≤ –ª–æ—Ç–æ
    if text == "–ª–æ—Ç–æ":
            response = bingoController.start_game(peer_id, user_id)
            send_message(peer_id, response)
            continue

    if text == "–ª–æ—Ç–æ –≤—Å—Ç—É–ø–∏—Ç—å":
            response = bingoController.join_game(peer_id, user_id)
            send_message(peer_id, response)
            continue

    if text == "–ª–æ—Ç–æ –Ω–∞—á–∞—Ç—å":
            response = bingoController.start_bingo(peer_id, user_id)
            send_message(peer_id, response)
            continue

    if text == "–ª–æ—Ç–æ —á–∏—Å–ª–æ":
            response = bingoController.draw_number(peer_id, user_id)
            send_message(peer_id, response)
            continue

    if text == "–ª–æ—Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∞":
            response = bingoController.check_card(peer_id, user_id)
            send_message(peer_id, response)
            continue

    if text == "–ª–æ—Ç–æ —á–∏—Å–ª–∞":
            response = bingoController.get_drawn_numbers(peer_id)
            send_message(peer_id, response)
            continue

    if text == "–ª–æ—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã":
            response = bingoController.get_standings(peer_id)
            send_message(peer_id, response)
            continue

    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —á–∏—Ç–µ—Ä—Å—Ç–≤–∞ (–ø–æ–¥–¥–µ–ª–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞)
    if text == "–ª–æ—Ç–æ –ø–æ–¥–¥–µ–ª–∞—Ç—å":
            response = bingoController.cheat_attempt(peer_id, user_id)
            send_message(peer_id, response)
            continue

    if text == "–ª–æ—Ç–æ —á–∏—Ç–µ—Ä—ã":
            response = bingoController.get_excluded_players(peer_id)
            send_message(peer_id, response)
            continue

    if text == "–ª–æ—Ç–æ —Å—Ç–æ–ø":
            response = bingoController.end_game(peer_id, user_id)
            send_message(peer_id, response)
            continue

    # ========= –õ–û–¢–ï–†–ï–Ø =========
    # –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ—Ç–µ—Ä–µ–∏ (—Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏ –∞–¥–º–∏–Ω—ã)
    if text == "–ª–æ—Ç–µ—Ä–µ—è":
            if adminController.is_admin(peer_id, user_id):
                response = lotteryController.create_lottery(peer_id, user_id)
            else:
                response = "‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ª–æ—Ç–µ—Ä–µ–∏!"
            send_message(peer_id, response)
            continue

    # –í—ã–¥–∞—á–∞ –±–∏–ª–µ—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞ –ª–æ—Ç–µ—Ä–µ–∏, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏)
    if text.startswith("–ª–æ—Ç–µ—Ä–µ—è –±–∏–ª–µ—Ç"):
            parts = text.split()
            if len(parts) >= 3:
                try:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    if message.get('reply_message'):
                        target_user_id = message['reply_message']['from_id']
                        count = int(parts[2])
                    else:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç–µ
                        if "[id" in text:
                            # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è [id123456|@username]
                            mention_start = text.find("[id") + 3
                            mention_end = text.find("|", mention_start)
                            target_user_id = int(text[mention_start:mention_end])
                            count = int(parts[-1])  # –ü–æ—Å–ª–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                        else:
                            send_message(peer_id, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: '–ª–æ—Ç–µ—Ä–µ—è –±–∏–ª–µ—Ç @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ' –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
                            continue
                    
                    response = lotteryController.give_tickets(peer_id, user_id, target_user_id, count)
                except (ValueError, IndexError):
                    response = "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: '–ª–æ—Ç–µ—Ä–µ—è –±–∏–ª–µ—Ç @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ' (–æ—Ç 1 –¥–æ 10)"
            else:
                response = "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: '–ª–æ—Ç–µ—Ä–µ—è –±–∏–ª–µ—Ç @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'"
            send_message(peer_id, response)
            continue

    # –ú–æ–∏ –±–∏–ª–µ—Ç—ã
    if text == "–ª–æ—Ç–µ—Ä–µ—è –º–æ–∏":
            response = lotteryController.get_my_tickets(peer_id, user_id)
            send_message(peer_id, response)
            continue

    # –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    if text == "–ª–æ—Ç–µ—Ä–µ—è —Å–ø–∏—Å–æ–∫":
            response = lotteryController.get_participants_list(peer_id)
            send_message(peer_id, response)
            continue

    # –ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
    if text == "–ª–æ—Ç–µ—Ä–µ—è —Ä–æ–∑—ã–≥—Ä—ã—à":
            response = lotteryController.conduct_draw(peer_id, user_id)
            send_message(peer_id, response)
            continue

    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ—Ç–µ—Ä–µ–∏
    if text == "–ª–æ—Ç–µ—Ä–µ—è —Å—Ç–æ–ø":
            response = lotteryController.stop_lottery(peer_id, user_id)
            send_message(peer_id, response)
            continue

    # ========= –°–ö–†–´–¢–´–ï –ö–û–ú–ê–ù–î–´ –õ–û–¢–ï–†–ï–ò (—Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å) =========
    # –í–∫–ª—é—á–µ–Ω–∏–µ –†–ü-—Ä–µ–∂–∏–º–∞
    if text == "–ª–æ—Ç–µ—Ä–µ—è —Ä–ø –≤–∫–ª":
            if adminController.is_creator(peer_id, user_id):
                response = lotteryController.enable_rp_mode(peer_id, user_id)
            else:
                response = "‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–µ—Å–µ–¥—ã!"
            send_message(peer_id, response)
            continue

    # –í—ã–∫–ª—é—á–µ–Ω–∏–µ –†–ü-—Ä–µ–∂–∏–º–∞
    if text == "–ª–æ—Ç–µ—Ä–µ—è —Ä–ø –≤—ã–∫–ª":
            if adminController.is_creator(peer_id, user_id):
                response = lotteryController.disable_rp_mode(peer_id, user_id)
            else:
                response = "‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–µ—Å–µ–¥—ã!"
            send_message(peer_id, response)
            continue

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–Ω—ã –±–∏–ª–µ—Ç–∞
    if text.startswith("–ª–æ—Ç–µ—Ä–µ—è —Ü–µ–Ω–∞"):
            if adminController.is_creator(peer_id, user_id):
                parts = text.split()
                if len(parts) >= 3:
                    try:
                        price = int(parts[2])
                        response = lotteryController.set_ticket_price(peer_id, user_id, price)
                    except ValueError:
                        response = "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ! –ü—Ä–∏–º–µ—Ä: '–ª–æ—Ç–µ—Ä–µ—è —Ü–µ–Ω–∞ 150'"
                else:
                    response = "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: '–ª–æ—Ç–µ—Ä–µ—è —Ü–µ–Ω–∞ [—á–∏—Å–ª–æ]'. –ü—Ä–∏–º–µ—Ä: '–ª–æ—Ç–µ—Ä–µ—è —Ü–µ–Ω–∞ 150'"
            else:
                response = "‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–µ—Å–µ–¥—ã!"
            send_message(peer_id, response)
            continue

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
    if text.startswith("–ª–æ—Ç–µ—Ä–µ—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏"):
            if adminController.is_creator(peer_id, user_id) or adminController.is_admin(peer_id, user_id):
                parts = text.split()
                if len(parts) >= 3:
                    try:
                        count = int(parts[2])
                        response = lotteryController.set_winner_count(peer_id, user_id, count)
                    except ValueError:
                        response = "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ! –ü—Ä–∏–º–µ—Ä: '–ª–æ—Ç–µ—Ä–µ—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏ 5'"
                else:
                    response = "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: '–ª–æ—Ç–µ—Ä–µ—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏ [—á–∏—Å–ª–æ]'. –ü—Ä–∏–º–µ—Ä: '–ª–æ—Ç–µ—Ä–µ—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏ 5'"
            else:
                response = "‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –±–µ—Å–µ–¥—ã!"
            send_message(peer_id, response)
            continue

    # –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
    
    # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–µ—Å–µ–¥—ã
    if text == "—Å—Ç–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º":
            response = adminController.set_creator(peer_id, user_id)
            send_message(peer_id, response)
            continue

    if text == "–∞–¥–º–∏–Ω–∫–∞":
            response = adminController.get_chat_staff(peer_id)
            send_message(peer_id, response)
            continue

    if text == "–º–æ–∏ –ø—Ä–∞–≤–∞":
            response = adminController.get_user_permissions(peer_id, user_id)
            send_message(peer_id, response)
            continue

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if text == "–ø—Ä–∞–≤–∞":
            try:
                if message.get('reply_message'):
                    target_user_id = message['reply_message']['from_id']
                    response = adminController.get_user_permissions(peer_id, target_user_id)
                else:
                    response = "‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–∞–≤–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å."
                send_message(peer_id, response)
            except Exception as e:
                send_message(peer_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            continue

    if text == "–∞–¥–º–∏–Ω –ø–æ–º–æ—â—å":
            response = adminController.get_admin_commands_help(peer_id, user_id)
            send_message(peer_id, response)
            continue

    # –ü–æ–≤—ã—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if text == "–ø–æ–≤—ã—Å–∏—Ç—å":
            try:
                if message.get('reply_message'):
                    target_user_id = message['reply_message']['from_id']
                    response = adminController.promote_user(peer_id, user_id, target_user_id)
                else:
                    response = "‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å."
                send_message(peer_id, response)
            except Exception as e:
                send_message(peer_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            continue

    # –ü–æ–Ω–∏–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if text == "–ø–æ–Ω–∏–∑–∏—Ç—å":
            try:
                if message.get('reply_message'):
                    target_user_id = message['reply_message']['from_id']
                    response = adminController.demote_user(peer_id, user_id, target_user_id)
                else:
                    response = "‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–Ω–∏–∑–∏—Ç—å."
                send_message(peer_id, response)
            except Exception as e:
                send_message(peer_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–Ω–∏–∂–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            continue

    # –ö–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if text == "–∫–∏–∫":
            try:
                if message.get('reply_message'):
                    target_user_id = message['reply_message']['from_id']
                    response = adminController.kick_user(peer_id, user_id, target_user_id, vk)
                else:
                    response = "‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å."
                send_message(peer_id, response)
            except Exception as e:
                send_message(peer_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            continue

    # –ü–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–∞–≤ —Å–æ–∑–¥–∞—Ç–µ–ª—è
    if text == "–ø–µ—Ä–µ–¥–∞—Ç—å –≤–ª–∞—Å—Ç—å":
            try:
                if message.get('reply_message'):
                    target_user_id = message['reply_message']['from_id']
                    response = adminController.transfer_creator(peer_id, user_id, target_user_id)
                else:
                    response = "‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—è."
                send_message(peer_id, response)
            except Exception as e:
                send_message(peer_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –ø—Ä–∞–≤ —Å–æ–∑–¥–∞—Ç–µ–ª—è.")
            continue

    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –∏ –≤—ã—à–µ)
    if text == "—Å—Ç–æ–ø –∏–≥—Ä—ã":
            if adminController.is_moderator(peer_id, user_id):
                # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã
                responses = []
                
                # –ó–∞–≤–µ—Ä—à–∞–µ–º –ª–æ—Ç–æ
                try:
                    lotto_response = bingoController.force_end_game(peer_id)
                    if not lotto_response.startswith("‚ùå"):
                        responses.append("üé≤ –õ–æ—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
                except:
                    pass
                
                # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä
                
                if responses:
                    moderator_name = get_user_name(user_id)
                    final_response = f"‚öñÔ∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {moderator_name} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª –∏–≥—Ä—ã:\n" + "\n".join(responses)
                else:
                    final_response = "‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è."
                
                send_message(peer_id, final_response)
            else:
                send_message(peer_id, "‚ùå –¢–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞—Ç—å –∏–≥—Ä—ã!")
            continue
            
        # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏ D&D 5e
    if text == "–ø–æ–ª—É—á–∏—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é" or text == "–Ω–æ–≤—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂":
            response = characterController.start_character_creation(user_id, peer_id)
            send_message(peer_id, response)

    if text == "–ª–∏—Ü–µ–Ω–∑–∏—è" or text == "–ª–∏—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞":
            response = characterController.get_character_sheet(user_id, peer_id)
            send_message(peer_id, response)

    if text == "—Å–¥–∞—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é":
            response = characterController.delete_character(user_id, peer_id)
            send_message(peer_id, response)

    else:
            #–£—Å–ª–æ–≤–∏–µ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.
            pass