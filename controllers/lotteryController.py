import json
import os
import random
from datetime import datetime
from controllers.messageController import get_user_name

class LotteryController:
    def __init__(self):
        self.data_file = "data/lottery_data.json"
        self.lottery_data = self._load_lottery_data()
        
    def _load_lottery_data(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ª–æ—Ç–µ—Ä–µ–∏"""
        if os.path.exists(self.data_file):
            try:
                with open(self.data_file, "r", encoding="utf-8") as f:
                    return json.load(f)
            except (json.JSONDecodeError, FileNotFoundError):
                pass
        
        # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        return {
            "chats": {},  # {peer_id: {"active": bool, "tickets": {user_id: [numbers]}, "prize_pool": int, "admin": user_id, "rp_mode": bool, "ticket_price": int, "winner_count": int}}
            "global_settings": {
                "default_rp_mode": False,  # –†–ü-—Ä–µ–∂–∏–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫–ª—é—á–µ–Ω
                "default_ticket_price": 100,  # –¶–µ–Ω–∞ –±–∏–ª–µ—Ç–∞ –≤ –∑–æ–ª–æ—Ç—ã—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                "default_winner_count": 3  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            }
        }
    
    def _save_lottery_data(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ª–æ—Ç–µ—Ä–µ–∏"""
        os.makedirs(os.path.dirname(self.data_file), exist_ok=True)
        with open(self.data_file, "w", encoding="utf-8") as f:
            json.dump(self.lottery_data, f, ensure_ascii=False, indent=2)
    
    def _get_chat_settings(self, peer_id):
        """–ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã"""
        peer_id_str = str(peer_id)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ—Å–µ–¥—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if "chat_settings" not in self.lottery_data:
            self.lottery_data["chat_settings"] = {}
        
        if peer_id_str not in self.lottery_data["chat_settings"]:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            global_settings = self.lottery_data.get("global_settings", {})
            rp_mode = global_settings.get("default_rp_mode", False)
            
            self.lottery_data["chat_settings"][peer_id_str] = {
                "rp_mode": rp_mode,
                "winner_count": global_settings.get("default_winner_count", 3)
            }
            
            # –¶–µ–Ω—É –±–∏–ª–µ—Ç–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –†–ü-—Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω
            if rp_mode:
                self.lottery_data["chat_settings"][peer_id_str]["ticket_price"] = global_settings.get("default_ticket_price", 100)
        
        return self.lottery_data["chat_settings"][peer_id_str]
    
    def create_lottery(self, peer_id, admin_id):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –ª–æ—Ç–µ—Ä–µ—é"""
        peer_id_str = str(peer_id)
        
        if peer_id_str in self.lottery_data["chats"] and self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –í –±–µ—Å–µ–¥–µ —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ª–æ—Ç–µ—Ä–µ—è! –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è —Å—Ç–æ–ø'."
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–π –±–µ—Å–µ–¥—ã
        chat_settings = self._get_chat_settings(peer_id)
        
        lottery_data = {
            "active": True,
            "tickets": {},
            "prize_pool": 0,
            "admin": admin_id,
            "rp_mode": chat_settings["rp_mode"],
            "winner_count": chat_settings["winner_count"],
            "created_at": datetime.now().isoformat()
        }
        
        # –¶–µ–Ω—É –±–∏–ª–µ—Ç–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –†–ü-—Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω
        if chat_settings["rp_mode"]:
            lottery_data["ticket_price"] = chat_settings.get("ticket_price", 100)
        
        self.lottery_data["chats"][peer_id_str] = lottery_data
        
        self._save_lottery_data()
        admin_name = get_user_name(admin_id)
        return f"üéüÔ∏è –õ–æ—Ç–µ—Ä–µ—è —Å–æ–∑–¥–∞–Ω–∞!\nüëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {admin_name}\n\nüìù –ö–æ–º–∞–Ω–¥—ã:\n‚Ä¢ –ª–æ—Ç–µ—Ä–µ—è –±–∏–ª–µ—Ç @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] - –≤—ã–¥–∞—Ç—å –±–∏–ª–µ—Ç—ã\n‚Ä¢ –ª–æ—Ç–µ—Ä–µ—è –º–æ–∏ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –±–∏–ª–µ—Ç—ã\n‚Ä¢ –ª–æ—Ç–µ—Ä–µ—è —Å–ø–∏—Å–æ–∫ - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n‚Ä¢ –ª–æ—Ç–µ—Ä–µ—è —Ä–æ–∑—ã–≥—Ä—ã—à - –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–æ–∑—ã–≥—Ä—ã—à\n‚Ä¢ –ª–æ—Ç–µ—Ä–µ—è —Å—Ç–æ–ø - –∑–∞–≤–µ—Ä—à–∏—Ç—å –ª–æ—Ç–µ—Ä–µ—é"
    
    def give_tickets(self, peer_id, admin_id, target_user_id, count):
        """–í—ã–¥–∞—Ç—å –±–∏–ª–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        peer_id_str = str(peer_id)
        
        if peer_id_str not in self.lottery_data["chats"] or not self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –í –±–µ—Å–µ–¥–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏. –°–æ–∑–¥–∞–π—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è'."
        
        lottery = self.lottery_data["chats"][peer_id_str]
        
        if lottery["admin"] != admin_id:
            return "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ª–æ—Ç–µ—Ä–µ–∏ –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –±–∏–ª–µ—Ç—ã!"
        
        if count < 1 or count > 10:
            return "‚ùå –ú–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å –æ—Ç 1 –¥–æ 10 –±–∏–ª–µ—Ç–æ–≤ –∑–∞ —Ä–∞–∑."
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∏–ª–µ—Ç—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏
        user_id_str = str(target_user_id)
        if user_id_str not in lottery["tickets"]:
            lottery["tickets"][user_id_str] = []
        
        new_tickets = []
        for _ in range(count):
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞ (6-–∑–Ω–∞—á–Ω—ã–π)
            while True:
                ticket_number = random.randint(100000, 999999)
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —ç—Ç–æ–π –ª–æ—Ç–µ—Ä–µ–µ
                used_numbers = []
                for tickets in lottery["tickets"].values():
                    used_numbers.extend(tickets)
                if ticket_number not in used_numbers:
                    break
            
            new_tickets.append(ticket_number)
            lottery["tickets"][user_id_str].append(ticket_number)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –†–ü-—Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω)
        rp_mode = lottery.get("rp_mode", False)
        if rp_mode:
            ticket_price = lottery.get("ticket_price", 100)
            lottery["prize_pool"] += count * ticket_price
        
        self._save_lottery_data()
        
        target_name = get_user_name(target_user_id)
        admin_name = get_user_name(admin_id)
        
        tickets_text = "\n".join([f"üéüÔ∏è {ticket}" for ticket in new_tickets])
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        if rp_mode:
            currency = "–∑–æ–ª–æ—Ç—ã—Ö" if lottery.get("ticket_price", 100) != 1 else "–∑–æ–ª–æ—Ç–æ–π"
            return f"‚úÖ {admin_name} –≤—ã–¥–∞–ª {count} –±–∏–ª–µ—Ç(–æ–≤) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_name}!\n\n{tickets_text}\n\nüí∞ –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: {lottery['prize_pool']} {currency}"
        else:
            return f"‚úÖ {admin_name} –≤—ã–¥–∞–ª {count} –±–∏–ª–µ—Ç(–æ–≤) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_name}!\n\n{tickets_text}"
    
    def get_my_tickets(self, peer_id, user_id):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –±–∏–ª–µ—Ç—ã"""
        peer_id_str = str(peer_id)
        
        if peer_id_str not in self.lottery_data["chats"] or not self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –í –±–µ—Å–µ–¥–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏."
        
        lottery = self.lottery_data["chats"][peer_id_str]
        user_id_str = str(user_id)
        
        if user_id_str not in lottery["tickets"] or not lottery["tickets"][user_id_str]:
            return "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –±–∏–ª–µ—Ç–æ–≤ –≤ —ç—Ç–æ–π –ª–æ—Ç–µ—Ä–µ–µ."
        
        user_name = get_user_name(user_id)
        tickets = lottery["tickets"][user_id_str]
        tickets_text = "\n".join([f"üéüÔ∏è {ticket}" for ticket in tickets])
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        rp_mode = lottery.get("rp_mode", False)
        if rp_mode:
            currency = "–∑–æ–ª–æ—Ç—ã—Ö" if lottery.get("prize_pool", 0) != 1 else "–∑–æ–ª–æ—Ç–æ–π"
            return f"üéüÔ∏è –ë–∏–ª–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_name}:\n\n{tickets_text}\n\nüìä –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: {len(tickets)}\nüí∞ –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: {lottery['prize_pool']} {currency}"
        else:
            return f"üéüÔ∏è –ë–∏–ª–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_name}:\n\n{tickets_text}\n\nüìä –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: {len(tickets)}"
    
    def get_participants_list(self, peer_id):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
        peer_id_str = str(peer_id)
        
        if peer_id_str not in self.lottery_data["chats"] or not self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –í –±–µ—Å–µ–¥–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏."
        
        lottery = self.lottery_data["chats"][peer_id_str]
        
        if not lottery["tickets"]:
            return "‚ùå –í –ª–æ—Ç–µ—Ä–µ–µ –ø–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤."
        
        response = "üéüÔ∏è –£–ß–ê–°–¢–ù–ò–ö–ò –õ–û–¢–ï–†–ï–ò:\n\n"
        total_tickets = 0
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±–∏–ª–µ—Ç–æ–≤ (—É–±—ã–≤–∞–Ω–∏–µ)
        participants = []
        for user_id_str, tickets in lottery["tickets"].items():
            if tickets:  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –±–∏–ª–µ—Ç—ã
                user_id = int(user_id_str)
                user_name = get_user_name(user_id)
                participants.append((user_name, len(tickets), user_id))
                total_tickets += len(tickets)
        
        participants.sort(key=lambda x: x[1], reverse=True)
        
        for i, (name, ticket_count, user_id) in enumerate(participants, 1):
            chance = (ticket_count / total_tickets) * 100 if total_tickets > 0 else 0
            response += f"{i}. {name} - {ticket_count} –±–∏–ª–µ—Ç(–æ–≤) ({chance:.1f}%)\n"
        
        admin_name = get_user_name(lottery["admin"])
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        rp_mode = lottery.get("rp_mode", False)
        if rp_mode:
            currency = "–∑–æ–ª–æ—Ç—ã—Ö" if lottery.get("prize_pool", 0) != 1 else "–∑–æ–ª–æ—Ç–æ–π"
            response += f"\nüìä –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: {total_tickets}\nüí∞ –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: {lottery['prize_pool']} {currency}\nüëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {admin_name}"
        else:
            response += f"\nüìä –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: {total_tickets}\nüëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {admin_name}"
        
        return response
    
    def conduct_draw(self, peer_id, admin_id):
        """–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ä–æ–∑—ã–≥—Ä—ã—à –ª–æ—Ç–µ—Ä–µ–∏"""
        peer_id_str = str(peer_id)
        
        if peer_id_str not in self.lottery_data["chats"] or not self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –í –±–µ—Å–µ–¥–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏."
        
        lottery = self.lottery_data["chats"][peer_id_str]
        
        if lottery["admin"] != admin_id:
            return "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ª–æ—Ç–µ—Ä–µ–∏ –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–æ–∑—ã–≥—Ä—ã—à!"
        
        if not lottery["tickets"] or all(not tickets for tickets in lottery["tickets"].values()):
            return "‚ùå –í –ª–æ—Ç–µ—Ä–µ–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –±–∏–ª–µ—Ç–∞–º–∏!"
        
        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –±–∏–ª–µ—Ç—ã
        all_tickets = []
        for user_id_str, tickets in lottery["tickets"].items():
            for ticket in tickets:
                all_tickets.append((ticket, int(user_id_str)))
        
        if len(all_tickets) < 1:
            return "‚ùå –í –ª–æ—Ç–µ—Ä–µ–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏–ª–µ—Ç–æ–≤!"
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ—Ç–µ—Ä–µ–∏
        winner_count = lottery.get("winner_count", 3)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç (–Ω–µ –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
        unique_participants = len(set(lottery["tickets"].keys()))
        prize_places = min(winner_count, unique_participants)
        
        # –†–æ–∑—ã–≥—Ä—ã—à
        winners = []
        remaining_tickets = all_tickets.copy()
        
        for place in range(1, prize_places + 1):
            if not remaining_tickets:
                break
            
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –±–∏–ª–µ—Ç
            winning_ticket, winner_id = random.choice(remaining_tickets)
            winners.append((place, winning_ticket, winner_id))
            
            # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –±–∏–ª–µ—Ç—ã —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á—Ç–æ–±—ã –Ω–µ –≤—ã–∏–≥—Ä–∞–ª –¥–≤–∞–∂–¥—ã)
            remaining_tickets = [(t, u) for t, u in remaining_tickets if u != winner_id]
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–∑—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–µ—Å—Ç
        prize_pool = lottery["prize_pool"]
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–æ–≤
        if prize_places == 1:
            prize_distribution = {1: 1.0}  # 100%
        elif prize_places == 2:
            prize_distribution = {1: 0.7, 2: 0.3}  # 70%, 30%
        elif prize_places == 3:
            prize_distribution = {1: 0.6, 2: 0.3, 3: 0.1}  # 60%, 30%, 10%
        else:
            # –î–ª—è 4+ –º–µ—Å—Ç —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–∑—ã —Å —É–º–µ–Ω—å—à–µ–Ω–∏–µ–º
            prize_distribution = {}
            # –ü–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç 40%
            prize_distribution[1] = 0.4
            # –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–µ–ª—è—Ç –æ—Å—Ç–∞–≤—à–∏–µ—Å—è 60%
            remaining_percent = 0.6
            for i in range(2, prize_places + 1):
                prize_distribution[i] = remaining_percent / (prize_places - 1)
        
        response = "üéâ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–û–ó–´–ì–†–´–®–ê –õ–û–¢–ï–†–ï–ò! üéâ\n\n"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –†–ü-—Ä–µ–∂–∏–º
        rp_mode = lottery.get("rp_mode", False)
        
        for place, ticket, winner_id in winners:
            winner_name = get_user_name(winner_id)
            
            if place == 1:
                emoji = "ü•á"
                place_text = "–ì–õ–ê–í–ù–´–ô –ü–†–ò–ó"
            elif place == 2:
                emoji = "ü•à"
                place_text = "–í–¢–û–†–û–ï –ú–ï–°–¢–û"
            elif place == 3:
                emoji = "ü•â"
                place_text = "–¢–†–ï–¢–¨–ï –ú–ï–°–¢–û"
            else:
                emoji = "üèÖ"
                place_text = f"{place}-–ï –ú–ï–°–¢–û"
            
            response += f"{emoji} {place_text}:\n"
            response += f"üéüÔ∏è –ë–∏–ª–µ—Ç: {ticket}\n"
            response += f"üë§ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner_name}\n"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–∑—ã —Ç–æ–ª—å–∫–æ –≤ –†–ü-—Ä–µ–∂–∏–º–µ
            if rp_mode:
                prize = int(prize_pool * prize_distribution.get(place, 0))
                currency = "–∑–æ–ª–æ—Ç—ã—Ö" if prize != 1 else "–∑–æ–ª–æ—Ç–æ–π"
                response += f"üí∞ –ü—Ä–∏–∑: {prize} {currency}\n"
            
            response += "\n"
        
        response += f"üéüÔ∏è –í—Å–µ–≥–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–æ –±–∏–ª–µ—Ç–æ–≤: {len(all_tickets)}\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ —Ç–æ–ª—å–∫–æ –≤ –†–ü-—Ä–µ–∂–∏–º–µ
        if rp_mode:
            currency = "–∑–æ–ª–æ—Ç—ã—Ö" if prize_pool != 1 else "–∑–æ–ª–æ—Ç–æ–π"
            response += f"üí∞ –û–±—â–∏–π –ø—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: {prize_pool} {currency}"
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –ª–æ—Ç–µ—Ä–µ—é
        lottery["active"] = False
        lottery["completed_at"] = datetime.now().isoformat()
        lottery["winners"] = winners
        
        self._save_lottery_data()
        
        return response
    
    def stop_lottery(self, peer_id, admin_id):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ—Ç–µ—Ä–µ—é"""
        peer_id_str = str(peer_id)
        
        if peer_id_str not in self.lottery_data["chats"] or not self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –í –±–µ—Å–µ–¥–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏."
        
        lottery = self.lottery_data["chats"][peer_id_str]
        
        if lottery["admin"] != admin_id:
            return "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ª–æ—Ç–µ—Ä–µ–∏ –º–æ–∂–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ—ë!"
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_tickets = sum(len(tickets) for tickets in lottery["tickets"].values())
        participants_count = len([tickets for tickets in lottery["tickets"].values() if tickets])
        
        lottery["active"] = False
        lottery["stopped_at"] = datetime.now().isoformat()
        
        self._save_lottery_data()
        
        admin_name = get_user_name(admin_id)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        rp_mode = lottery.get("rp_mode", False)
        if rp_mode:
            currency = "–∑–æ–ª–æ—Ç—ã—Ö" if lottery['prize_pool'] != 1 else "–∑–æ–ª–æ—Ç–æ–π"
            return f"üõë –õ–æ—Ç–µ—Ä–µ—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {admin_name}!\n\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {participants_count}\n‚Ä¢ –ë–∏–ª–µ—Ç–æ–≤ –≤—ã–¥–∞–Ω–æ: {total_tickets}\n‚Ä¢ –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: {lottery['prize_pool']} {currency}\n\nüí° –î–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –ª–æ—Ç–µ—Ä–µ—é –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è'."
        else:
            return f"üõë –õ–æ—Ç–µ—Ä–µ—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {admin_name}!\n\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {participants_count}\n‚Ä¢ –ë–∏–ª–µ—Ç–æ–≤ –≤—ã–¥–∞–Ω–æ: {total_tickets}\n\nüí° –î–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –ª–æ—Ç–µ—Ä–µ—é –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è'."
    
    def enable_rp_mode(self, peer_id, creator_id):
        """–í–∫–ª—é—á–∏—Ç—å –†–ü-—Ä–µ–∂–∏–º –ª–æ—Ç–µ—Ä–µ–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã (—Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å)"""
        peer_id_str = str(peer_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏
        if peer_id_str in self.lottery_data["chats"] and self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –≤–æ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏! –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è —Å—Ç–æ–ø'."
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±–µ—Å–µ–¥—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if "chat_settings" not in self.lottery_data:
            self.lottery_data["chat_settings"] = {}
        
        if peer_id_str not in self.lottery_data["chat_settings"]:
            self.lottery_data["chat_settings"][peer_id_str] = {
                "rp_mode": False,
                "winner_count": 3
            }
        
        self.lottery_data["chat_settings"][peer_id_str]["rp_mode"] = True
        # –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –†–ü-—Ä–µ–∂–∏–º–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–Ω—É –±–∏–ª–µ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if "ticket_price" not in self.lottery_data["chat_settings"][peer_id_str]:
            self.lottery_data["chat_settings"][peer_id_str]["ticket_price"] = 100
        
        self._save_lottery_data()
        
        creator_name = get_user_name(creator_id)
        return f"‚úÖ –†–ü-—Ä–µ–∂–∏–º –ª–æ—Ç–µ—Ä–µ–∏ –≤–∫–ª—é—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {creator_name} –¥–ª—è —ç—Ç–æ–π –±–µ—Å–µ–¥—ã!\n\nüéØ –ò–ó–ú–ï–ù–ï–ù–ò–Ø:\n‚Ä¢ –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –∑–æ–ª–æ—Ç—ã—Ö\n‚Ä¢ –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ü–µ–Ω—É –±–∏–ª–µ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è —Ü–µ–Ω–∞ [—á–∏—Å–ª–æ]'\n‚Ä¢ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1 –±–∏–ª–µ—Ç = 100 –∑–æ–ª–æ—Ç—ã—Ö\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ–π—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ\n\nüí° –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ª–æ—Ç–µ—Ä–µ—è —Ä–ø –≤—ã–∫–ª'"
    
    def disable_rp_mode(self, peer_id, creator_id):
        """–í—ã–∫–ª—é—á–∏—Ç—å –†–ü-—Ä–µ–∂–∏–º –ª–æ—Ç–µ—Ä–µ–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã (—Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å)"""
        peer_id_str = str(peer_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏
        if peer_id_str in self.lottery_data["chats"] and self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –≤–æ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏! –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è —Å—Ç–æ–ø'."
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±–µ—Å–µ–¥—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if "chat_settings" not in self.lottery_data:
            self.lottery_data["chat_settings"] = {}
        
        if peer_id_str not in self.lottery_data["chat_settings"]:
            self.lottery_data["chat_settings"][peer_id_str] = {
                "rp_mode": False,
                "winner_count": 3
            }
        
        self.lottery_data["chat_settings"][peer_id_str]["rp_mode"] = False
        # –ü—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –†–ü-—Ä–µ–∂–∏–º–∞ —É–¥–∞–ª—è–µ–º —Ü–µ–Ω—É –±–∏–ª–µ—Ç–∞, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –Ω–µ –Ω—É–∂–Ω–∞
        if "ticket_price" in self.lottery_data["chat_settings"][peer_id_str]:
            del self.lottery_data["chat_settings"][peer_id_str]["ticket_price"]
        
        self._save_lottery_data()
        
        creator_name = get_user_name(creator_id)
        return f"‚úÖ –†–ü-—Ä–µ–∂–∏–º –ª–æ—Ç–µ—Ä–µ–∏ –≤—ã–∫–ª—é—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {creator_name} –¥–ª—è —ç—Ç–æ–π –±–µ—Å–µ–¥—ã!\n\nüéØ –ò–ó–ú–ï–ù–ï–ù–ò–Ø:\n‚Ä¢ –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ –æ—Ç–∫–ª—é—á–µ–Ω\n‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã —Å–∞–º–∏ –Ω–∞–∑–Ω–∞—á–∞—é—Ç –ø—Ä–∏–∑—ã –≤–Ω–µ –±–æ—Ç–∞\n‚Ä¢ –õ–æ—Ç–µ—Ä–µ—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ–π—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ\n\nüí° –î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ª–æ—Ç–µ—Ä–µ—è —Ä–ø –≤–∫–ª'"
    
    def set_winner_count(self, peer_id, creator_id, count):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã (—Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏ –∞–¥–º–∏–Ω—ã)"""
        peer_id_str = str(peer_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        if count < 1 or count > 10:
            return "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 10!"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏
        if peer_id_str in self.lottery_data["chats"] and self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –≤–æ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏! –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è —Å—Ç–æ–ø'."
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±–µ—Å–µ–¥—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if "chat_settings" not in self.lottery_data:
            self.lottery_data["chat_settings"] = {}
        
        if peer_id_str not in self.lottery_data["chat_settings"]:
            self.lottery_data["chat_settings"][peer_id_str] = {
                "rp_mode": False,
                "winner_count": 3
            }
        
        self.lottery_data["chat_settings"][peer_id_str]["winner_count"] = count
        self._save_lottery_data()
        
        creator_name = get_user_name(creator_id)
        return f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∏–∑–º–µ–Ω–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {creator_name} –¥–ª—è —ç—Ç–æ–π –±–µ—Å–µ–¥—ã!\n\nüèÜ –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: {count}\n‚Ä¢ –°–ª–µ–¥—É—é—â–∞—è –ª–æ—Ç–µ—Ä–µ—è –±—É–¥–µ—Ç –∏–º–µ—Ç—å {count} –ø—Ä–∏–∑–æ–≤—ã—Ö –º–µ—Å—Ç\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ–π—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ\n\nüí° –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –¥–ª—è –Ω–æ–≤—ã—Ö –ª–æ—Ç–µ—Ä–µ–π"
    
    def set_ticket_price(self, peer_id, creator_id, price):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É –±–∏–ª–µ—Ç–∞ –≤ –∑–æ–ª–æ—Ç—ã—Ö –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã (—Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å)"""
        peer_id_str = str(peer_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏
        if peer_id_str in self.lottery_data["chats"] and self.lottery_data["chats"][peer_id_str].get("active"):
            return "‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –±–∏–ª–µ—Ç–∞ –≤–æ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–∏! –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è —Å—Ç–æ–ø'."
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ—Å–µ–¥—ã
        chat_settings = self._get_chat_settings(peer_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –†–ü-—Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω
        if not chat_settings.get("rp_mode", False):
            return "‚ùå –¶–µ–Ω—É –±–∏–ª–µ—Ç–∞ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω–æ–º –†–ü-—Ä–µ–∂–∏–º–µ! –í–∫–ª—é—á–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π '–ª–æ—Ç–µ—Ä–µ—è —Ä–ø –≤–∫–ª'."
        
        if price < 1 or price > 10000:
            return "‚ùå –¶–µ–Ω–∞ –±–∏–ª–µ—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ 10000 –∑–æ–ª–æ—Ç—ã—Ö!"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±–µ—Å–µ–¥—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if "chat_settings" not in self.lottery_data:
            self.lottery_data["chat_settings"] = {}
        
        if peer_id_str not in self.lottery_data["chat_settings"]:
            self.lottery_data["chat_settings"][peer_id_str] = {
                "rp_mode": True,  # –ú—ã —É–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–ª–∏, —á—Ç–æ –†–ü-—Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω
                "winner_count": 3
            }
        
        self.lottery_data["chat_settings"][peer_id_str]["ticket_price"] = price
        self._save_lottery_data()
        
        creator_name = get_user_name(creator_id)
        rp_status = "–≤–∫–ª—é—á–µ–Ω" if self.lottery_data["chat_settings"][peer_id_str]["rp_mode"] else "–≤—ã–∫–ª—é—á–µ–Ω"
        return f"‚úÖ –¶–µ–Ω–∞ –±–∏–ª–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {creator_name} –¥–ª—è —ç—Ç–æ–π –±–µ—Å–µ–¥—ã!\n\nüí∞ –ù–æ–≤–∞—è —Ü–µ–Ω–∞: {price} –∑–æ–ª–æ—Ç—ã—Ö –∑–∞ –±–∏–ª–µ—Ç\nüéØ –†–ü-—Ä–µ–∂–∏–º: {rp_status}\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ–π—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ\n\nüí° –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –∫ –Ω–æ–≤—ã–º –ª–æ—Ç–µ—Ä–µ—è–º."
