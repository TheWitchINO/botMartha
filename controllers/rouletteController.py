import random
import time
from controllers.messageController import get_user_name

class RouletteController:
    def __init__(self):
        self.games = {}  # {peer_id: {players: [], alive_players: [], current_player: 0, bullet_position: int}}
        self.pending_games = {}  # {peer_id: {host_id: id, players: [], timestamp: float}}

    def start_game(self, peer_id, host_id):
        if peer_id in self.games:
            return "–ò–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ!"
        
        self.pending_games[peer_id] = {
            "host_id": host_id,
            "players": [host_id],
            "timestamp": time.time()
        }
        return f"{get_user_name(host_id)} –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É! –ù–∞–ø–∏—à–∏—Ç–µ '—Ä—É–ª–µ—Ç–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è', —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å. –£ –≤–∞—Å –µ—Å—Ç—å 60 —Å–µ–∫—É–Ω–¥."

    def join_game(self, peer_id, user_id):
        if peer_id not in self.pending_games:
            return "–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –≤ –∏–≥—Ä—É."
        
        if time.time() - self.pending_games[peer_id]["timestamp"] > 60:
            del self.pending_games[peer_id]
            return "–í—Ä–µ–º—è –Ω–∞–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–æ–≤ –∏—Å—Ç–µ–∫–ª–æ."

        if user_id in self.pending_games[peer_id]["players"]:
            return "–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ."

        self.pending_games[peer_id]["players"].append(user_id)
        players_list = [get_user_name(pid) for pid in self.pending_games[peer_id]["players"]]
        return f"{get_user_name(user_id)} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–≤–æ–µ–π –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä–µ!\n–¢–µ–∫—É—â–∏–µ –∏–≥—Ä–æ–∫–∏: {', '.join(players_list)}. –ù–∞–ø–∏—à–∏—Ç–µ '—Ä—É–ª–µ—Ç–∫–∞ –Ω–∞—á–∞—Ç—å', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É."

    def start_roulette(self, peer_id):
        if peer_id not in self.pending_games:
            return "–ù–µ—Ç –∏–≥—Ä—ã –¥–ª—è –Ω–∞—á–∞–ª–∞."
            
        if len(self.pending_games[peer_id]["players"]) < 2:
            return "–ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –∏–≥—Ä–æ–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞."

        players = self.pending_games[peer_id]["players"]
        random.shuffle(players)  # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –ø–æ—Ä—è–¥–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
        
        self.games[peer_id] = {
            "players": players.copy(),  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
            "alive_players": players.copy(),  # –°–ø–∏—Å–æ–∫ –∂–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
            "current_player": 0,
            "bullet_position": random.randint(0, 5),
            "current_position": 0,
            "round": 1  # –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ä–∞—É–Ω–¥–æ–≤
        }
        
        del self.pending_games[peer_id]
        players_list = [get_user_name(pid) for pid in players]
        return f"–í–∞—à–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –∏–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è! –ü–æ—Ä—è–¥–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:\n{', '.join(players_list)}\n\n–†–∞—É–Ω–¥ 1\n–ü–µ—Ä–≤—ã–π —Ö–æ–¥: {get_user_name(players[0])}!"

    def shoot(self, peer_id, user_id):
        if peer_id not in self.games:
            return "–í —ç—Ç–æ–π –±–µ—Å–µ–¥–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã."
            
        game = self.games[peer_id]
        if user_id != game["alive_players"][game["current_player"]]:
            return "–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥!"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ø–∞–ª–∞ –ª–∏ –ø—É–ª—è
        if game["current_position"] == game["bullet_position"]:
            dead_player = game["alive_players"][game["current_player"]]
            # –£–±–∏—Ä–∞–µ–º –∏–≥—Ä–æ–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∂–∏–≤—ã—Ö
            game["alive_players"].pop(game["current_player"])
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª—Å—è –ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–≥—Ä–æ–∫
            if len(game["alive_players"]) == 1:
                winner = game["alive_players"][0]
                del self.games[peer_id]
                return (f"üí• –ë–ê–•! –ú–æ–∑–≥–∏{get_user_name(dead_player)}—Ä–∞–∑–º–∞–∑–∞–ª–∏—Å—å –ø–æ —Å—Ç–µ–Ω–µ!\n\n"
                       f"üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {get_user_name(winner)}!")
            
            # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫–æ–≤ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ, –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥
            game["round"] += 1
            game["bullet_position"] = random.randint(0, 5)
            game["current_position"] = 0
            game["current_player"] = 0
            
            alive_list = [get_user_name(pid) for pid in game["alive_players"]]
            return (f"üí• –ë–ê–•! –ú–æ–∑–≥–∏{get_user_name(dead_player)}—Ä–∞–∑–º–∞–∑–∞–ª–∏—Å—å –ø–æ —Å—Ç–µ–Ω–µ!\n\n"
                   f"–†–∞—É–Ω–¥ {game['round']}\n"
                   f"–û—Å—Ç–∞–≤—à–∏–µ—Å—è –∏–≥—Ä–æ–∫–∏: {', '.join(alive_list)}\n"
                   f"–ü–µ—Ä–≤—ã–π —Ö–æ–¥: {get_user_name(game['alive_players'][0])}")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∂–∏–≤–æ–º—É –∏–≥—Ä–æ–∫—É
        game["current_position"] = (game["current_position"] + 1) % 6
        game["current_player"] = (game["current_player"] + 1) % len(game["alive_players"])
        next_player = game["alive_players"][game["current_player"]]
        
        return f"*—â–µ–ª–∫* –í—ã–∂–∏–≤–∞–µ—Ç! –°–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥: {get_user_name(next_player)}"