# messages.py
import vk_api
from config import token
import random
import re

vk_session = vk_api.VkApi(token=token)
vk = vk_session.get_api()

def send_message(peer_id, message):
    vk.messages.send(peer_id=peer_id, message=message, random_id=0)

def get_user_name(user_id):
    user_info = vk.users.get(user_ids=user_id)
    if user_info:
        return user_info[0].get('first_name', "–¥—Ä—É–≥")
    return "–¥—Ä—É–≥"

def roll_dice(sides, rolls=1):
    results = [random.randint(1, sides) for _ in range(rolls)]
    return results

help_message = (
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Å–∏—Å—Ç–µ–º–æ–π –±—Ä–æ—Å–∫–æ–≤ –∫—É–±–∏–∫–æ–≤:\n\n"
    "üé≤ **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±—Ä–æ—Å–∫–æ–≤ –∫—É–±–∏–∫–æ–≤:**\n"
    "- `/–¥20` ‚Äî –±—Ä–æ—Å–∏—Ç—å –æ–¥–∏–Ω 20-–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫.\n"
    "- `/3–¥6` ‚Äî –±—Ä–æ—Å–∏—Ç—å —Ç—Ä–∏ 6-–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å—É–º–º—É.\n"
    "- `/–¥20+5` ‚Äî –±—Ä–æ—Å–∏—Ç—å –æ–¥–∏–Ω 20-–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫ –∏ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä +5.\n"
    "üìã **–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:**\n"
    "- `/–¥20` ‚Äî –æ–±—ã—á–Ω—ã–π –±—Ä–æ—Å–æ–∫ 20-–≥—Ä–∞–Ω–Ω–æ–≥–æ –∫—É–±–∏–∫–∞.\n"
    "- `/2–¥10+3` ‚Äî –±—Ä–æ—Å–∏—Ç—å –¥–≤–∞ 10-–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞ –∏ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä +3.\n"
    "–ù–∞–ø–∏—à–∏ `/–ø–æ–º–æ—â—å`, –µ—Å–ª–∏ —Ç–µ–±–µ —Å–Ω–æ–≤–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —ç—Ç–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è. –£–¥–∞—á–∏ –≤ –±—Ä–æ—Å–∫–∞—Ö! üé≤")


def calculate_roll(command: str) -> str:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–æ–≤.
    :param command: –ö–æ–º–∞–Ω–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∫20", "2–∫6+3" –∏ —Ç.–ø.
    :return: –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.
    """
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ "–∫" –Ω–∞ "–¥" –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    command = command.replace("–∫", "–¥").replace("d", "–¥")

    message = ""

    # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º, —á—Ç–æ–±—ã –æ—Ç–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –±—Ä–æ—Å–∫–æ–≤ –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
    parts = re.findall(r'(\d*–¥\d+)([+-]?\d*)', command)

    if not parts:
        return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: /–¥20+5."

    try:
        for part in parts:
            dice_command, modifier = part
            part_message = ""

            if "–¥" in dice_command:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Å–∏–º–≤–æ–ª "–¥", —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞
                # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–±–∏–∫–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä–∞–Ω–µ–π
                dice_count, dice_sides = dice_command.split("–¥")

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª
                if not dice_sides.isdigit() or (dice_count and not dice_count.isdigit()):
                    raise ValueError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–µ–ª –≤ –∫–æ–º–∞–Ω–¥–µ.")

                dice_count = int(dice_count) if dice_count else 1
                dice_sides = int(dice_sides)

                if dice_count <= 0 or dice_sides <= 0:
                    raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–±–∏–∫–æ–≤ –∏ –≥—Ä–∞–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")

                # –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞
                rolls = roll_dice(dice_sides, dice_count)
                rolls_str = ", ".join(map(str, rolls))

                if dice_count == 1 and dice_sides == 20:
                    crit = "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Å–ø–µ—Ö!" if rolls[0] == 20 else "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≤–∞–ª!" if rolls[0] == 1 else ""
                    part_message += f"–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞: {rolls[0]}. {crit}\n"
                elif dice_count >= 2:
                    part_message += f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—Ä–æ—Å–∫–æ–≤: {rolls_str}.\n"
                else:
                    part_message += f"–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞: {rolls[0]}\n"

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã –æ—Ç–¥–µ–ª—å–Ω–æ
            if modifier:
                try:
                    modifier_value = int(modifier)
                    total = sum(rolls) + modifier_value
                    part_message += f" –ò—Ç–æ–≥: {', '.join(map(str, rolls))} + {modifier_value} = {total}.\n"
                except ValueError:
                    part_message += "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä ‚Äî —ç—Ç–æ —á–∏—Å–ª–æ.\n"

            message += part_message  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã

    except ValueError as e:
        return f"–û—à–∏–±–∫–∞: {str(e)}"

    return message













