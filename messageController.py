# messages.py
import vk_api
from config import token
import random
import re

vk_session = vk_api.VkApi(token=token)
vk = vk_session.get_api()


def send_message(peer_id, message):
    vk.messages.send(peer_id=peer_id, message=message, random_id=0)


def get_user_name(user_id):
    user_info = vk.users.get(user_ids=user_id)
    if user_info:
        return user_info[0].get('first_name', "–¥—Ä—É–≥")
    return "–¥—Ä—É–≥"


def roll_dice(sides, rolls=1):
    results = [random.randint(1, sides) for _ in range(rolls)]
    return results


help_message = (
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Å–∏—Å—Ç–µ–º–æ–π –±—Ä–æ—Å–∫–æ–≤ –∫—É–±–∏–∫–æ–≤:\n\n"
    "üé≤ **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±—Ä–æ—Å–∫–æ–≤ –∫—É–±–∏–∫–æ–≤:**\n"
    "- `/–¥20` ‚Äî –±—Ä–æ—Å–∏—Ç—å –æ–¥–∏–Ω 20-–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫.\n"
    "- `/3–¥6` ‚Äî –±—Ä–æ—Å–∏—Ç—å —Ç—Ä–∏ 6-–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å—É–º–º—É.\n"
    "- `/–¥20+5` ‚Äî –±—Ä–æ—Å–∏—Ç—å –æ–¥–∏–Ω 20-–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫ –∏ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä +5.\n"
    "üìã **–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:**\n"
    "- `/–¥20` ‚Äî –æ–±—ã—á–Ω—ã–π –±—Ä–æ—Å–æ–∫ 20-–≥—Ä–∞–Ω–Ω–æ–≥–æ –∫—É–±–∏–∫–∞.\n"
    "- `/2–¥10+3` ‚Äî –±—Ä–æ—Å–∏—Ç—å –¥–≤–∞ 10-–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞ –∏ –¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä +3.\n"
    "–ù–∞–ø–∏—à–∏ `/–ø–æ–º–æ—â—å`, –µ—Å–ª–∏ —Ç–µ–±–µ —Å–Ω–æ–≤–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —ç—Ç–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è. –£–¥–∞—á–∏ –≤ –±—Ä–æ—Å–∫–∞—Ö! üé≤")


def calculate_roll(command: str) -> str:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–æ–≤.
    :param command: –ö–æ–º–∞–Ω–¥–∞(—ã) –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∫20", "2–∫6+3", –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏.
    :return: –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–æ–≤ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.
    """
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ "–∫" –Ω–∞ "–¥" –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    command = command.replace("–∫", "–¥").replace("d", "–¥")

    # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ —Å—Ç—Ä–æ–∫–∞–º
    commands = command.splitlines()

    message = ""

    for cmd in commands:
        cmd = cmd.strip()
        if not cmd:
            continue

        # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "2–¥6+3")
        split_index = cmd.find("–¥")
        if split_index == -1:
            message += f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {cmd}. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: /–¥20+5.\n"
            continue

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–±–∏–∫–æ–≤ –∏ –≥—Ä–∞–Ω–µ–π
        dice_count_str = cmd[:split_index].strip()
        rest = cmd[split_index + 1:].strip()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–±–∏–∫–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1)
        dice_count = int(dice_count_str) if dice_count_str.isdigit() else 1

        if dice_count > 100:
            message += f"–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–±–∏–∫–æ–≤, –≥–æ—Å–ø–æ–¥–∏–Ω."
            continue

        # –†–∞–∑–¥–µ–ª—è–µ–º –æ—Å—Ç–∞–≤—à—É—é—Å—è —á–∞—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –≥—Ä–∞–Ω–∏ –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
        dice_sides_str = ""
        modifiers = []
        modifier_steps = []
        current_value = ""
        current_sign = "+"

        for char in rest:
            if char.isdigit():
                current_value += char
            elif char in "+-":
                if current_value:
                    if dice_sides_str == "":
                        dice_sides_str = current_value
                    else:
                        value = int(current_value) if current_sign == "+" else -int(current_value)
                        modifiers.append(value)
                        modifier_steps.append(f"{current_sign}{current_value}")
                    current_value = ""
                current_sign = char

        if current_value:
            if dice_sides_str == "":
                dice_sides_str = current_value
            else:
                value = int(current_value) if current_sign == "+" else -int(current_value)
                modifiers.append(value)
                modifier_steps.append(f"{current_sign}{current_value}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥—Ä–∞–Ω–µ–π
        if not dice_sides_str.isdigit():
            message += f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä–∞–Ω–µ–π –≤ –∫–æ–º–∞–Ω–¥–µ: {cmd}.\n"
            continue

        dice_sides = int(dice_sides_str)

        if dice_sides > 10000:
            message += "–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä–∞–Ω–µ–π, –≥–æ—Å–ø–æ–¥–∏–Ω."
            continue

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π
        if dice_count <= 0 or dice_sides <= 0:
            message += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–±–∏–∫–æ–≤ –∏ –≥—Ä–∞–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º –≤ –∫–æ–º–∞–Ω–¥–µ: {cmd}.\n"
            continue

        # –í—ã–ø–æ–ª–Ω—è–µ–º –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–æ–≤
        rolls = roll_dice(dice_sides, dice_count)
        rolls_str = ", ".join(map(str, rolls))

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä
        modifier_value = sum(modifiers)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
        if dice_count == 1 and dice_sides == 20:
            crit = "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Å–ø–µ—Ö!" if rolls[0] == 20 else "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≤–∞–ª!" if rolls[0] == 1 else ""
            message += f"–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞: {rolls[0]}. {crit}\n"
        elif dice_count >= 2:
            message += f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—Ä–æ—Å–∫–æ–≤: {rolls_str}.\n"
        else:
            message += f"–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞: {rolls[0]}\n"

        total = sum(rolls) + modifier_value
        modifier_expression = " ".join(modifier_steps)
        message += f" –ò—Ç–æ–≥: {sum(rolls)} {modifier_expression} = {total}.\n"

    return message


